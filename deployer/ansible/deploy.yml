---
- name: Deploy Service
  hosts: "{{ service }}"
  remote_user: root
  become: yes
  tasks:
    - name: Check if repository is cloned
      stat:
        path: "/home/cestx/.git"
      register: repo_status

    - name: Clone repository if not present
      git:
        repo: "https://github.com/nesiler/CESTX"
        dest: "/home/cestx"
      when: not repo_status.stat.exists

    - name: Pull latest changes
      git:
        repo: "https://github.com/nesiler/CESTX"
        dest: "/home/cestx"
        update: yes

    - name: Deploy Service
      shell: |
        cd /home/cestx/{{ service }}
        {{ deploy_command[service] }}
  vars:
    deploy_command:
      REDIS: "docker compose up -d --force-recreate"
      POSTGRESQL: "docker compose up -d --force-recreate"
      RABBITMQ: "docker compose up -d --force-recreate"
      REGISTRY: "go build -o {{ service }} && ./{{ service }}"
      LOGGING-S: "go build -o {{ service }} && ./{{ service }}"
      TASK-S: "go build -o {{ service }} && ./{{ service }}"
      PROXY-S: "go build -o {{ service }} && ./{{ service }}"
      TEMPLATE-S: "go build -o {{ service }} && ./{{ service }}"
      MACHINE-S: "go build -o {{ service }} && ./{{ service }}"
      API-GW: "dotnet run"
