---
- name: Deploy Service
  hosts: "{{ service }}"
  remote_user: root
  become: yes
  tasks:
    - name: Check if repository is cloned
      stat:
        path: "/home/cestx/.git"
      register: repo_status

    - name: Clone repository if not present
      git:
        repo: "https://github.com/nesiler/CESTX"
        dest: "/home/cestx"
      when: not repo_status.stat.exists

    - name: Pull latest changes
      git:
        repo: "https://github.com/nesiler/CESTX"
        dest: "/home/cestx"
        update: yes

    - name: Copy .env file to hosts
      copy:
        src: "/home/cestx/.env"
        dest: "/home/cestx/.env"
      delegate_to: localhost

    - name: Source environment variables from .env file
      shell: |
        set -a
        source /home/cestx/.env
        set +a
      args:
        executable: /bin/bash

    - name: Deploy Service
      shell: |
        cd /home/cestx/{{ service }}
        {{ deploy_command[service] }}
      environment:
        REGISTRY_HOST: "{{ lookup('env', 'REGISTRY_HOST') }}"
        # Add other environment variables if needed
  vars:
    deploy_command:
      redis: "docker compose up -d --force-recreate"
      postgresql: "docker compose up -d --force-recreate"
      rabbitmq: "docker compose up -d --force-recreate"
      registry: "go build -o {{ service }} && ./{{ service }}"
      logging-s: "go build -o {{ service }} && ./{{ service }}"
      task-s: "go build -o {{ service }} && ./{{ service }}"
      proxy-s: "go build -o {{ service }} && ./{{ service }}"
      template-s: "go build -o {{ service }} && ./{{ service }}"
      machine-s: "go build -o {{ service }} && ./{{ service }}"
      api-gw: "dotnet run"
