---
- name: Install Docker on Ubuntu
  hosts: systems
  become: true
  remote_user: root

  tasks:
    - name: Update the apt package index
      apt:
        update_cache: yes

    - name: Upgrade all packages
      apt:
        upgrade: dist

    - name: Remove old Docker GPG key if it exists
      command: >
        apt-key del 9DC858229FC7DD38854AE2D88D81803C0EBFCD88
      ignore_errors: yes

    - name: Remove any existing Docker GPG keyrings
      file:
        path: /usr/share/keyrings/docker-archive-keyring.gpg
        state: absent
      ignore_errors: yes

    - name: Add Dockerâ€™s official GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        keyring: /usr/share/keyrings/docker-archive-keyring.gpg
        state: present

    - name: Remove any existing Docker repository entries
      command: rm -f /etc/apt/sources.list.d/docker.list
      ignore_errors: yes

    - name: Set up the stable repository
      apt_repository:
        repo: deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
        state: present
        filename: docker.list

    - name: Update the apt package index
      apt:
        update_cache: yes

    - name: Install packages to allow apt to use a repository over HTTPS
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
        state: present

    - name: Install the latest version of Docker Engine and containerd
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
        state: present

    - name: Ensure Docker is started
      systemd:
        name: docker
        state: started
        enabled: true

    - name: Add current user to docker group
      user:
        name: root
        groups: docker
        append: yes

    - name: Create /etc/docker directory
      file:
        path: /etc/docker
        state: directory

    - name: Set up Docker daemon to start on boot with required configurations
      copy:
        content: |
          {
            "exec-opts": ["native.cgroupdriver=systemd"],
            "log-driver": "json-file",
            "log-opts": {
              "max-size": "100m"
            },
            "storage-driver": "overlay2"
          }
        dest: /etc/docker/daemon.json

    - name: Reload the systemd configuration
      command: systemctl daemon-reload

    - name: Restart Docker
      systemd:
        name: docker
        state: restarted

    - name: Ensure docker group membership is applied (re-login required)
      debug:
        msg: "Docker installation complete. Please log out and log back in to use Docker without sudo."

- name: Post-installation steps
  hosts: systems
  become: true
  remote_user: root
  tasks:
    - name: Create /etc/systemd/system/docker.service.d directory
      file:
        path: /etc/systemd/system/docker.service.d
        state: directory

    - name: Set up Docker service to use a specific DNS server (optional)
      copy:
        content: |
          [Service]
          ExecStart=
          ExecStart=/usr/bin/dockerd --dns 8.8.8.8
        dest: /etc/systemd/system/docker.service.d/docker.conf

    - name: Reload the systemd configuration
      command: systemctl daemon-reload

    - name: Restart Docker
      systemd:
        name: docker
        state: restarted
